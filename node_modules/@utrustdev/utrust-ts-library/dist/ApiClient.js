"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PRODUCTION_URL = exports.SANDBOX_URL = void 0;
var axios_1 = __importDefault(require("axios"));
exports.SANDBOX_URL = 'https://merchants.api.sandbox-utrust.com/api/';
exports.PRODUCTION_URL = 'https://merchants.api.utrust.com/api/';
var ApiClient = function (apiKey, environment) {
    if (environment === void 0) { environment = 'production'; }
    var apiRoot = environment === 'production' ? exports.PRODUCTION_URL : exports.SANDBOX_URL;
    var axiosInstance = axios_1.default.create({
        baseURL: apiRoot,
        headers: {
            common: {
                'Content-Type': 'application/vnd.api+json',
                authorization: "Bearer " + apiKey,
            },
        },
    });
    var createOrder = function (order, customer) {
        return axiosInstance
            .post('/stores/orders/', {
            data: {
                type: 'orders',
                attributes: {
                    order: order,
                    customer: customer,
                },
            },
        })
            .then(function (_a) {
            var status = _a.status, _b = _a.data.data, uuid = _b.id, redirect_url = _b.attributes.redirect_url;
            return {
                status: status,
                data: {
                    redirectUrl: redirect_url,
                    uuid: uuid,
                },
                errors: [],
            };
        })
            .catch(function (error) {
            var _a, _b, _c;
            return ({
                status: (_a = error === null || error === void 0 ? void 0 : error.response) === null || _a === void 0 ? void 0 : _a.status,
                data: null,
                errors: (_c = (_b = error === null || error === void 0 ? void 0 : error.response) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.errors,
            });
        });
    };
    var getOrder = function (uuid) {
        return axiosInstance
            .get("/stores/orders/" + uuid)
            .then(function (_a) {
            var status = _a.status, data = _a.data.data.attributes;
            return { status: status, data: data, errors: [] };
        })
            .catch(function (error) {
            var _a, _b, _c;
            return ({
                status: (_a = error === null || error === void 0 ? void 0 : error.response) === null || _a === void 0 ? void 0 : _a.status,
                data: null,
                errors: (_c = (_b = error === null || error === void 0 ? void 0 : error.response) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.errors,
            });
        });
    };
    return { createOrder: createOrder, getOrder: getOrder };
};
exports.default = ApiClient;
//# sourceMappingURL=ApiClient.js.map